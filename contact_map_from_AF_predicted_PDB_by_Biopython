from Bio import PDB
import os
from tqdm import tqdm
import numpy
import warnings
def calc_residue_dist(residue_one, residue_two) :
    """Returns the C-alpha distance between two residues"""
    diff_vector  = residue_one["CA"].coord - residue_two["CA"].coord
    return numpy.sqrt(numpy.sum(diff_vector * diff_vector))

def calc_dist_matrix(chain_one, chain_two) :
    """Returns a matrix of C-alpha distances between two chains"""
    answer = numpy.zeros((len(chain_one), len(chain_two)), numpy.float)
    for row, residue_one in enumerate(chain_one) :
        for col, residue_two in enumerate(chain_two) :
            answer[row, col] = calc_residue_dist(residue_one, residue_two)
    return answer
warnings.filterwarnings('ignore')
path = '/home/sgzhang/perl5/TAGPPI-main/data/yeast/dictionary/pdb/'
pdb_files = os.listdir(path)
for i in tqdm(pdb_files):
    uid = i.split('.')[0]
    p = PDB.PDBParser()
    structure_id = uid
    filename = path + i
    structure = p.get_structure(structure_id, filename)
    model = structure[0]
    dist_matrix = calc_dist_matrix(model['A'], model['A'])
    contact_map = (dist_matrix<10.0)+0
    #contact_map_dense = numpy.argwhere(contact_map == 1).transpose(1, 0)
    numpy.save('/home/sgzhang/perl5/TAGPPI-main/data/yeast/dictionary/contact_map_10.0/'+uid+'.npy',contact_map)
    # sequence extraction from the .pdb files
    # ppb = PDB.PPBuilder()
    # for pp in ppb.build_peptides(model):
    #     seq = str(pp.get_sequence())
    #     length = len(seq)
